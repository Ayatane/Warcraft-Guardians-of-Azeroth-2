namespace = wc_health_undeath

scripted_trigger health_event_is_worried_undeath_trigger = {
	OR = {
		ai_compassion >= medium_positive_ai_value
		dread_modified_ai_boldness = {
			dreaded_character = $CHARACTER$
			value <= medium_negative_ai_value
		}
		has_relation_friend = $CHARACTER$
		has_relation_lover = $CHARACTER$
		opinion = {
			target = $CHARACTER$
			value >= high_positive_opinion
		}
	}
	$CHARACTER$.health < fine_health
}

# Getting plagued
wc_health_undeath.1000 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { is_travelling = yes }
				desc = health.travel.t
			}
			desc = wc_health_undeath.1000.t
		}
	}
	desc = {
		desc = wc_health_undeath.1000.desc
		triggered_desc = {
			trigger = {
				court_physician_available_trigger = yes
				liege_picks_treatment_trigger = no
			}
			desc = wc_health_undeath.1000.court_physician.desc
		}
	}
	theme = healthcare
	override_background = {
		trigger = { is_travelling = yes }
		reference = terrain
	}
	left_portrait = {
		character = root
		animation = sick
	}
	right_portrait = {
		trigger = {
			NOT = { root = scope:physician }
			trigger_if = {
				limit = { is_travelling = yes }
				current_travel_plan = {
					any_entourage_character = {
						has_court_position = court_physician_court_position
					}
				}
			}
		}
		character = scope:physician
		triggered_animation = {
			trigger = { scope:physician = { health_event_is_worried_undeath_trigger = { CHARACTER = scope:sick_character } } }
			animation = worry
		}
		triggered_animation = {
			trigger = { scope:physician = { ai_rationality >= 0 } } #Don't look rational if you're not
			animation = personality_rational
		}
		animation = idle
	}

	override_background = {
		trigger = { is_travelling = yes }
		reference = terrain_travel
	}

	trigger = {
		can_contract_disease_trigger = { DISEASE = undead_plague }
	}
	
	weight_multiplier = {
		base = 1

		modifier = {
			health <= fine_health
			factor = 1.1
		}
		modifier = {
			health <= poor_health
			factor = 1.1
		}
		modifier = {
			is_adult = no
			factor = 1.5
		}
	}
	
	immediate = {
		play_music_cue = "mx_cue_illness"
		save_court_physician_as_effect = { SCOPE_NAME = physician }
		contract_disease_effect = { DISEASE = undead_plague TREATMENT_EVENT = no } #Adds the trait, sends event "health.2201" to those who care if health is brought too low
	}
	
	#OK
	option = {
		name = wc_health_undeath.1000.a
		ai_chance = { base = 1 }
	}
	### TRAVEL- GO HOME
	option = {
		name = health.travel.option.home
		name = {
			trigger = {
				involved_activity ?= { has_activity_type = activity_pilgrimage }
			}
			text = pilgrimage.0041.b
		}
		flavor = health.travel.option.home.flavor 
		trigger = {
			is_travelling = yes
			current_travel_plan = {
				travel_plan_owner = root
			}
			involved_activity ?= {
				NOR = {
					has_activity_type = activity_tour
					is_required_special_guest = root
				}
			}
		}
		#Go back home, damnit
		if = {
			limit = { 
				involved_activity ?= { has_activity_type = activity_pilgrimage }
			}
			#Removed in the on_travel_plan_complete on_action
			set_variable = {
				name = pilgrimage_invalidated_illness
				value = involved_activity.activity_location
			}
		}
		#current_travel_plan = { cancel_travel_plan = yes }
		ai_chance = { base = 1 }
	}
}

# Become undead
wc_health_undeath.1001 = {
	type = character_event
	title = wc_health_undeath.1001.t
	desc = wc_health_undeath.1001.desc
	theme = healthcare
	left_portrait = {
		character = root
		animation = sick
	}
	
	immediate = {
		play_music_cue = "mx_cue_illness"
		
		# For graphics
		hidden_effect = { add_trait = undead_plague }
	}

	# Must feed!
	option = {
		name = wc_health_undeath.1001.a

		#raise_undead_by_move_to_pool_effect = { MASTER = scope:owner }
		
		# For graphics
		hidden_effect = { remove_trait = undead_plague }
	}
}

# You were saved by became incapable
# by ElMariuso
wc_health_undeath.1002 = {
	type = character_event
	title = wc_health_undeath.1002.t
	desc = wc_health_undeath.1002.desc
	theme = healthcare
	left_portrait = {
		character = root
		animation = pain
	}
	
	immediate = {	
		# For graphics
		hidden_effect = { remove_trait = undead_plague }
		hidden_effect = { add_trait = infirm }
		
		recover_from_disease_effect = { DISEASE = undead_plague }
	}
	
	option = {
		name = wc_health_undeath.1002.a
		
		# For graphics
		hidden_effect = { remove_trait = undead_plague }
		hidden_effect = { add_trait = infirm }
	}
}