macro = {
	description = "Execute an SGui for the current player"
	definition = "PlayerGuiExecute(Text)"
	replace_with = "GetScriptedGui(Text).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )"
}
macro = {
	description = "Gets Variable for player"
	definition = "PlayerGetVar(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Variable)"
}
macro = {
	description = "Does the player have this var"
	definition = "PlayerHasVar(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Variable).IsSet"
}
macro = {
	description = "Does the player have this reagent"
	definition = "PlayerHasReagent(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Concatenate(Variable, '_amount')).IsSet"
}

macro = {
	description = "Does the player have this reagent (ore)"
	definition = "PlayerHasReagentOre(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Concatenate(Variable, '_amount_ore')).IsSet"
}

macro = {
	description = "Gets reagent amount (ore)"
	definition = "PlayerGetReagentOre(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Concatenate(Variable, '_amount_ore'))"
}
macro = {
	description = "Gets reagent amount (bar)"
	definition = "PlayerGetReagentBar(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Concatenate(Variable, '_amount_bar'))"
}

macro = {
	description = "Does the player have this reagent (bar)"
	definition = "PlayerHasReagentBar(Variable)"
	replace_with = "GetPlayer.MakeScope.Var(Concatenate(Variable, '_amount_bar')).IsSet"
}

macro = {
	description = "Does the player have this var (its a flag)"
	definition = "PlayerFlagEquals(Variable, TargetVar)"
	replace_with = "Equals(GetPlayer.MakeScope.Var(Variable).GetFlagName, TargetVar)"
}

macro = {
	description = "Gets the Illustration image for the specified profession (e.g. profession_blacksmithing) "
	definition = "GetProfessionIllustration(Variable)"
	replace_with = "GetCultureInnovationType(Variable).GetIcon"
}

macro = {
	description = "is it herbalism, mining or skinning?"
	definition = "IsGatheringProf"
	replace_with = "Or(GetVariableSystem.HasValue('current_view', 'Herbalism'), Or(GetVariableSystem.HasValue('current_view', 'Mining'), GetVariableSystem.HasValue('current_view', 'Skinning')))"
}
