plague_of_undeath =  {

	color = { 200 0 175 }
	shader_data = {
		strength = 0.8
		edge_fade = 0.4
		tile_multiplier = 0.005
		texture_index = 0
		channel = red
	}
	priority = 5

	trait = bubonic_plague # TODO: change this!

	name = { 
		first_valid = { 
			triggered_desc = { 
				trigger = { 
					outbreak_intensity = minor
				}
				random_valid = { 
					desc = epidemic_scourge_of_province_loc
					desc = epidemic_undead_plague_of_province_loc
					desc = epidemic_grave_curse_of_province_loc
					desc = epidemic_deathwalking_of_province_loc
					desc = epidemic_wrath_of_death_god_loc
				}
			}
			random_valid = { 
				desc = epidemic_scourge_of_realm_loc
				desc = epidemic_undead_plague_of_realm_loc
				desc = epidemic_grave_curse_of_realm_loc
				desc = epidemic_deathwalking_of_realm_loc
				desc = epidemic_death_god_plague_loc
			}
		}
	}

	can_infect_character = { 
		# other characteristics here if needed
		NOR = {
			has_character_modifier = important_lore_character # not sure if this is right
			has_trait_with_flag = can_not_get_sick
		}
	}

	character_infection_chance = {
		value = character_infection_chance_default_value
		# note that bubonic plague is multiplied by 0.02 here, if too many are undeading do something like that here
		# also note that LE1+ characters dont get mitigation from this
		multiply = wc_lore_plague_mitigations_reduction
	}

	on_character_infected = { 
		trigger_event = { id = wc.epidemic.1101 days = { 3 7 } }
	}

	on_start = { 
		# do something here?
	}

	on_monthly = { 
		# TODO: add a set of events related to this.
	}

	on_end = { 
		# do something here?
	}

	# Every province has an infection level from 0-100, the highest level there they are above the threshold of
	# will have its modifiers applied
	infection_levels = { # TODO - figure out what to do here
		10 = {
			# Modifier applied to any province infected
			province_modifier = {
				
			}

			# Modifier applied to the county if its county capital province is infected
			county_modifier = {
				
			}

			# Modifier applied to every ruler that has this province as a part of their de facto realm hierarchy
			# This means its effects will be stacked on a ruler for every infected province
			realm_modifier = {
				
			}
		}
	}

	outbreak_intensities = {
		# Intensity levels are minor, major and apocalytpic, each can be read in separately
		# Higher intensity levels are kept when neighboring epidemics merge.

		minor = {
			# Chance for an outbreak of this intensity to spawn on a province per year
			# % from 0-100 inclusive
			# root = potential province
			# scope:epidemic_type = this epidemic type
			outbreak_chance = {
				<script value>
			}

			# Chance for an epidemic of this intensity to spread to an adjacent province per month
			# % from 0-100 inclusive
			# root = potential province
			# scope:epidemic = the epidemic
			spread_chance = {
				<script value>
			}

			# Maximum number of provinces an epidemic of this intensity can infect
			max_provinces = <script_value>

			# How long an infection in a province lasts for once it hits max infection
			# root = infected province
			# scope:epidemic = the epidemic
			infection_duration = {
				<scripted_duration>
			}

			# How many days it will take for a province to hit max infection
			# root = infected province
			# scope:epidemic = the epidemic
			infection_progress_duration = {
				<scripted_duration>
			}

			# How many days it will take for a province to recover from max infection after infection_duration has elapsed
			# root = infected province
			# scope:epidemic = the epidemic
			infection_recovery_duration = {
				<scripted_duration>
			}
		}
	}
}