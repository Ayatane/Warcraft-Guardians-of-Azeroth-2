wc_show_mana_gui = { scope = character is_shown = { wc_max_mana_value > 0 } } # Used to show/hide the entire interface

open_spellbook_sgui = {
	scope = character

	effect = {
		if = {
			limit = {
				NOT = { exists = global_var:spellbook_init }
			}
			init_elemental_fire_spells_effect = yes

			# set_global_variable = spellbook_init
		}
		# Temporary list so spell types will be displayed
		if = {
			limit = {
				NOT = { has_variable_list = spell_types }
			}

			add_to_variable_list = { name = spell_types target = flag:light }
			add_to_variable_list = { name = spell_types target = flag:shadow }
			add_to_variable_list = { name = spell_types target = flag:life }
			add_to_variable_list = { name = spell_types target = flag:death }
			add_to_variable_list = { name = spell_types target = flag:order }
			add_to_variable_list = { name = spell_types target = flag:disorder }
			add_to_variable_list = { name = spell_types target = flag:elemental_earth }
			add_to_variable_list = { name = spell_types target = flag:elemental_air }
			add_to_variable_list = { name = spell_types target = flag:elemental_fire }
			add_to_variable_list = { name = spell_types target = flag:elemental_water }

			add_to_variable_list = { name = spell_elemental_types target = flag:decay }
			add_to_variable_list = { name = spell_elemental_types target = flag:spirit }

			add_to_variable_list = { name = spell_ranks target = flag:rank_1 }
			add_to_variable_list = { name = spell_ranks target = flag:rank_2 }
			add_to_variable_list = { name = spell_ranks target = flag:rank_3 }
		}
	}		
}

close_spellbook_sgui = {
	scope = character 
	effect = {
		# Remove all spell-related variables
		remove_variable = current_spell_name
		remove_variable = current_spell_rank
		remove_variable = current_spell_mana_cost
		remove_variable = current_spell_class
		remove_variable = current_target_type
		remove_variable = elemental_type

		remove_variable = spellbook_open
		clear_variable_list = spell_types
		clear_variable_list = elemental_types
		clear_variable_list = spell_ranks

		remove_variable = spell_recipient
		remove_variable = original_recipient
		remove_variable = spellbook_type_cast
		remove_variable = spellbook_type_view
		remove_variable = spell_targets_list

		remove_variable = spellbook_open
	}
}
close_spellbook_lite_sgui = {
	scope = character 
	effect = {
		remove_variable = spellbook_open
	}
}
set_current_spell_class_sgui = {
	scope = character 
	saved_scopes = { class } 
	effect = {
		set_variable = {
			name = current_spell_class
			value = scope:class
		}
	}
}

set_current_spell_sgui = {
	scope = character
	saved_scopes = { spell } 
	effect = {
		set_variable = {
			name = current_spell_name
			value = scope:spell
		}
		if = {
			limit = { NOT = { has_variable = current_spell_rank } }
			set_variable = {
				name = current_spell_rank
				value = 1
			}
		}
		# getting the target type by rank
		if = {
			limit = { spell_target_is_character_list_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:character_list }
		}
		else_if = {
			limit = { spell_target_is_province_or_title_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:title }
		}
		else_if = {
			limit = { spell_target_is_character_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:character }
		}
		else_if = {
			limit = { spell_target_is_province_or_title_list_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:title_list }
		}
		execute_scoped_spell_effect = {
			SPELL = var:current_spell_name 
			EFFECT = set_spell_mana_cost_variable_effect
		}
	}
}

set_spell_rank_sgui = {
	scope = character
	saved_scopes = { function } 
	effect = {
		switch = {
			trigger = scope:function
			flag:rank_1 = {
				set_variable = {
					name = current_spell_rank
					value = 1
				}
			}
			flag:rank_2 = {
				set_variable = {
					name = current_spell_rank
					value = 2
				}
			}
			flag:rank_3 = {
				set_variable = {
					name = current_spell_rank
					value = 3
				}
			}
		}
		# getting the target type by rank
		if = {
			limit = { spell_target_is_character_list_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:character_list }
		}
		else_if = {
			limit = { spell_target_is_province_or_title_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:title }
		}
		else_if = {
			limit = { spell_target_is_character_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:character }
		}
		else_if = {
			limit = { spell_target_is_province_or_title_list_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
			set_variable = { name = current_target_type value = flag:title_list }
		}
		execute_scoped_spell_effect = {
			SPELL = var:current_spell_name 
			EFFECT = set_spell_mana_cost_variable_effect
		}
		if = {
			limit = {
				NOT = { exists = var:spell_recipient }
				exists = var:original_recipient
			}
			set_variable = {
				name = spell_recipient
				value = var:original_recipient
			}
			remove_variable = original_recipient
		}
		if = {
			limit = {
				exists = var:spell_recipient
				exists = var:original_recipient
				exists = var:current_spell_name
				exists = var:current_spell_rank
				var:current_target_type = flag:character
			}
			set_variable = {
				name = spell_recipient
				value = var:original_recipient
			}
			remove_variable = original_recipient
		}
		else_if = {
			limit = {
				exists = var:spell_recipient
				exists = var:current_spell_name
				exists = var:current_spell_rank
				NOT = {
					var:current_target_type = flag:character
				}
			}
			set_variable = {
				name = original_recipient
				value = var:spell_recipient
			}
			remove_variable = spell_recipient
		}
	}
}
set_spirit_decay_sgui = {
	scope = character	
	saved_scopes = { function } 
	effect = {
		set_variable = {
			name = elemental_type
			value = scope:function
		}
	}
}

is_spell_elemental_sgui = {
	scope = character
	is_valid = {
		spell_is_elemental_trigger = { SPELL_NAME = var:current_spell_name  }
	}
}

does_spell_have_ranks_sgui = {
	scope = character
	is_valid = {
		spell_has_ranks_trigger = { SPELL_NAME = var:current_spell_name  }
	}
}

clear_selected_spell_sgui = {
	scope = character
	effect = {
		remove_variable = current_spell_name
	}
}

can_select_spell_sgui = {
	scope = character 
	is_valid = {
		is_known_spell_trigger = {
			SPELL = var:current_spell_name
		}
		NOT = {
			spell_on_cooldown_trigger = {
				SPELL_NAME = var:current_spell_name
			}
		}
		NOT = {
			is_casting_spell_trigger = {
				SPELL = var:current_spell_name
			}
		}
	}
}

has_unlocked_spell_rank_sgui = {
	scope = character 
	saved_scopes = { spell_rank }
	has_unlocked_spell_rank_trigger = {
		SPELL_NAME = var:current_spell_name
		SPELL_RANK = scope:spell_rank
	}
}


can_cast_spell_sgui = {
	# checking for all parameters
	scope = character 

	is_valid = {
		all_requirements_for_casting_satisfied_trigger = yes
	}
}

knows_magic_class_sgui = {
	scope = character
	saves_scoped = { spell_class }

	is_valid = {
		trigger_if = {
			limit = { scope:spell_class = flag:light }
			is_magic_class_user_trigger = { MAGIC = light }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:shadow }
			is_magic_class_user_trigger = { MAGIC = shadow }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:death }
			is_magic_class_user_trigger = { MAGIC = death }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:life }
			is_magic_class_user_trigger = { MAGIC = life }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:order }
			is_magic_class_user_trigger = { MAGIC = order }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:disorder }
			is_magic_class_user_trigger = { MAGIC = disorder }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:elemental_fire }
			is_magic_class_user_trigger = { MAGIC = elemental_fire }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:elemental_air }
			is_magic_class_user_trigger = { MAGIC = elemental_air }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:elemental_water }
			is_magic_class_user_trigger = { MAGIC = elemental_water }
		}
		trigger_else_if = {
			limit = { scope:spell_class = flag:elemental_earth }
			is_magic_class_user_trigger = { MAGIC = elemental_earth }
		}
	}
}

set_target_or_add_sgui = {
	scope = character 
	saved_scopes = { target }
	effect = {
		set_variable = {
			name = spell_recipient
			value = scope:target
		}
		if = {
			limit = {
				OR = {
					var:current_target_type = flag:character_list
					var:current_target_type = flag:title_list
				}
			}
			add_to_variable_list = {
				name = spell_targets_list
				target = scope:target
			}
		}
		else = {
			set_variable = {
				name = spell_recipient
				value = scope:target
			}
		}
	}
}

remove_target_sgui = {
	scope = character 
	saved_scopes = { spell_target }
	effect = {
		if = {
			limit = {
				OR = {
					var:current_target_type = flag:character_list
					var:current_target_type = flag:title_list
				}
			}
			remove_list_variable = {
				name = spell_targets_list
				target = scope:spell_target
			}
		}
		else = {
			remove_variable = spell_recipient
		}
	}
}

is_spell_target_valid_sgui = {
	scope = character 
	saved_scopes = { target }
	is_valid = {
		OR = {
			AND = { # If you can only cast on yourself, then it has to be you
				spell_target_is_only_self_trigger = { SPELL_NAME = var:current_spell_name SPELL_RANK = var:current_spell_rank }
				var:spell_recipient = root
			}
			NOT = { any_in_list = { variable = spell_targets_list this = scope:target } } # Cant be already targeted
		}
	}
}

can_add_more_targets_sgui = {
	scope = character 
	is_valid = {
		NOT = {
			has_max_targets_trigger = yes
		}
	}
}

is_selected_target_sgui = {
	saved_scopes = { target }
	scope = character 
	is_valid = {
		OR = {
			var:spell_recipient = scope:target
			any_in_list = { variable = spell_targets_list this = scope:target }
		}
	}
}

cast_spell_sgui = {
	scope = character 
	effect = {
		execute_scoped_spell_effect = {
			EFFECT = start_spell_casting_effect
			SPELL = var:current_spell_name
		}
	}
}

spell_tooltip_sgui = {
	scope = character
	saved_scopes = { tooltip_target }
	effect = {
		show_as_tooltip = {
			execute_scoped_spell_effect = {
				EFFECT = start_spell_casting_effect
				SPELL = var:current_spell_name
			}
			execute_scoped_spell_effect = {
				EFFECT = show_spell_tt_effect
				SPELL = var:current_spell_name
			}
		}
	}
}

player_has_single_target_sgui = {
	scope = character

	is_valid = {
		exists = var:spell_recipient
		OR = {
			exists = var:current_spell_class
			OR = {
				spell_target_is_character_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } 
				spell_target_is_province_or_title_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } 
			}
		}
	}
}

spell_target_is_character_sgui = {
	scope = character

	is_valid = {
		exists = var:current_spell_name
		exists = var:current_spell_rank
		spell_target_is_character_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } 
	}
}

spell_target_is_province_sgui = {
	scope = character 

	is_valid = {
		exists = var:current_spell_name
		exists = var:current_spell_rank
		spell_target_is_province_or_title_trigger = { SPELL_NAME = var:current_spell_name RANK_VALUE = var:current_spell_rank } 
	}
}

player_has_targets_sgui = {
	scope = character 

	is_valid = {
		OR = {
			exists = var:spell_recipient
			has_variable_list = spell_targets_list
		}
	}
}
select_province_start_sgui = {
	scope = character

	effect = {
		if = {
			limit = {
				var:original_recipient = {
					is_landed = yes
				}
			}
			pan_camera_to_title = var:original_recipient.capital_barony
		}
		else_if = {
			limit = {
				exists = var:original_recipient.top_liege
			}
			pan_camera_to_title = var:original_recipient.top_liege.capital_barony
		}
		else_if = {
			limit = {
				exists = var:original_recipient.liege
			}
			pan_camera_to_title = var:original_recipient.liege.capital_barony
		}
		else = {
			pan_camera_to_title = var:original_recipient.location
		}
	}
}

get_titles_list_sgui = {
	scope = character
	effect = {
		if = {
			limit = {
				var:original_recipient = {
					is_landed = yes
				}
			}
			var:original_recipient = {
				save_scope_as = spell_target
			}
		}
		else_if = {
			limit = {
				exists = var:original_recipient.top_liege
			}
			var:original_recipient.top_liege = {
				save_scope_as = spell_target
			}
		}
		else_if = {
			limit = {
				exists = var:original_recipient.liege
			}
			var:original_recipient.liege = {
				save_scope_as = spell_target
			}
		}
		else = {
			var:original_recipient.location.holder = {
				save_scope_as = spell_target
			}
		}
		scope:spell_target = {
			every_held_title = {
				limit = {
					tier = tier_barony
				}
				save_scope_as = potential_title
				root = {
					add_to_variable_list = {
						name = target_titles
						target = scope:potential_title
					}
				}
			}
			every_vassal_or_below = {
				every_held_title = {
					limit = {
						tier = tier_barony
					}
					save_scope_as = potential_title
					root = {
						add_to_variable_list = {
							name = target_titles
							target = scope:potential_title
						}
					}
				}
			}
		}
	}
}

clear_target_titles_sgui = {
	scope = character
	effect = {
		clear_variable_list = target_titles
	}
}