# discover_recipe_effect = {
# 	switch = {
# 		trigger = $PROFESSION$
# 		flag:Tailoring
# 	}
# 	add_to_variable_list = {
# 		name = $PROFESSION$_known
# 		target = flag:$RECIPE$
# 	}
# 	custom_tooltip = discover_recipe_tt
# }

save_profession_effect = {
	add_trait = profession_$PROFESSION$
	save_scope_value_as = { name = new_profession value = flag:profession_$PROFESSION$ }
	if = {
		limit = {
			NOT = { has_variable = profession_1 }
			NOT = { has_variable = profession_2 }
		}
		set_variable = {
			name = profession_1
			value = scope:new_profession
		}
		set_variable = {
			name = profession_1_cooldown
			days = 3650
		}
	}
	else_if = {
		limit = {
			has_variable = profession_1 
			NOT = { has_variable = profession_2 }
		}
		set_variable = {
			name = profession_2
			value = scope:new_profession
		}
		set_variable = {
			name = profession_2_cooldown
			value = yes
			days = 3650
		}
	}
}

setup_profession_vars_effect = {
	add_starter_reagents_effect = { PROFESSION = $PROFESSION$ }	
	# else = {
	# 	if = { limit = { NOT = { has_variable_list = $PROFESSION$_known_recipes } }
			
	# 		# will give them some starting recipes later... (if applicable)	
	# 	}
	# }
}

# Character Scope
# Calculates chance of finding reagent
# REAGENT = reagent flag e.g. flag:iron or something
# accessible by the variable will_discover_current_reagent
chance_of_finding_reagent_effect = {
	duel = {
		value = 25
		50 = { 
			modifier = { 
				add = 50
				reagent_rarity_is_very_common_trigger = { REAGENT = flag:$REAGENT$ }
			}
			modifier = { 
				add = 40
				AND = {
					reagent_rarity_is_common_trigger = { REAGENT = flag:$REAGENT$ }
					NOR = {
						has_character_flag = lucky_charm_1
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = { 
				add = 25
				AND = {
					reagent_rarity_is_uncommon_trigger = { REAGENT = flag:$REAGENT$ }
					NOR = {
						has_character_flag = lucky_charm_1
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = { 
				add = 10
				AND = {
					reagent_rarity_is_rare_trigger = { REAGENT = flag:$REAGENT$ }
					NOR = {
						has_character_flag = lucky_charm_1
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = {
				add = 5
				AND = {
					reagent_rarity_is_exotic_trigger = { REAGENT = flag:$REAGENT$ }
					NOR = {
						has_character_flag = lucky_charm_1
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = { 
				add = 40
				AND = {
					reagent_rarity_is_uncommon_trigger = { REAGENT = flag:$REAGENT$ }
					OR = {
						has_character_flag = lucky_charm_1
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = { # 75 -> 82.5
				add = 40
				AND = {
					reagent_rarity_is_rare_trigger = { REAGENT = flag:$REAGENT$ }
					OR = {
						has_character_flag = lucky_charm_2
						has_character_flag = lucky_charm_3
					}
				}
			}
			modifier = { # 75 -> 82.5
				add = 40
				AND = {
					reagent_rarity_is_rare_trigger = { REAGENT = flag:$REAGENT$ }
					has_character_flag = lucky_charm_3
				}
			}
			modifier = {
				add = 50
				AND = {
					OR = {
						reagent_rarity_is_exotic_trigger = { REAGENT = flag:$REAGENT$ }
						reagent_rarity_is_rare_trigger = { REAGENT = flag:$REAGENT$ }
					}
					location = { has_building_with_flag = mine }
				}
			}
			modifier = { 
				add = 5
				has_variable = knows_$REAGENT$ 
			}
			modifier = { 
				add = -5
				any_in_list = {
					variable = last_discovered_reagents
					target = flag:$REAGENT$
				}
			}
			modifier = { # usually have to be prospected, but if you are at a special mine then no
				add = -1000
				AND = {
					reagent_is_gem_trigger = { REAGENT = flag:$REAGENT$ }
					NOT = { location = { has_building_or_higher = silvershard_mines_01 } }
				}
			}
			modifier = {
				add = 50
				AND = {
					reagent_is_gem_trigger = { REAGENT = flag:$REAGENT$ }
					location = { has_building_or_higher = silvershard_mines_01 } 
				}
			}
			modifier = {
				add = 50
				AND = {
					flag:elementium = flag:$REAGENT$ 
					location = { has_building_or_higher = elementium_depths_01 } 
				}
			}
			modifier = {
				add = 50
				AND = {
					flag:gold = flag:$REAGENT$ 
					OR = {
						location = { has_building_or_higher = fargodeep_mine_01 } 
						location = { has_building_or_higher = arathi_gold_mine_mine_01 } 
						location = { has_building_or_higher = night_webs_hollow_mine_01 } 
					}
				}
			}
			compare_modifier = {
				value = scope:duel_value
				multiplier = 3.5
				min = 60
			}
			set_variable = {
				name = will_discover_current_reagent
				value = yes
			}
		}
		50 = {
			compare_modifier = {
				value = scope:duel_value
				multiplier = -3.5
			}
			set_variable = {
				name = will_discover_current_reagent
				value = no
			}
		}
	}
}

add_starter_reagents_effect = {
	if = {
		limit = { $PROFESSION$ = flag:mining }
		if = { limit = { NOT = { exists = var:Mining_items_made } }
			set_variable = {
				name = Mining_items_made
				value = 0
			}
			set_variable = {
				name = Blacksmithing_items_made
				value = 0
			}
		}
		discover_reagent_effect = { REAGENT = gold }
		discover_reagent_effect = { REAGENT = silver }
		discover_reagent_effect = { REAGENT = iron }	
	}
	
}

# REAGENTS AND INVENTORY
# ALL CHARACTER SCOPE
discover_reagent_effect = {
	set_variable = {
		name = current_reagent
		value = flag:$REAGENT$
	}
	if = {
		limit = {
			is_mining_reagent = { REAGENT = $REAGENT$ }
		}
		if = {
			limit = { NOT = { exists = var:mining_xp } }
			set_variable = {
				name = mining_xp
				value = 1
			}
		}
		else = {
			change_variable = {
				name = mining_xp
				add = 1
			}
			add_trait_xp = {
				trait = profession_mining
				track = mining
				value = 1
			}
		}
	}
	if = {
		limit = { NOT = { has_variable = knows_$REAGENT$ }}
		send_interface_message = {
			title = discovered_reagent_desc
			left_icon = root
			set_variable = {
				name = knows_$REAGENT$ 
				target = yes
			}
			change_variable = {
				name = known_reagents_count
				add = 1
			}
			set_variable = {
				name = last_discovered_reagent
				value = flag:$REAGENT$
			}
		}
	}
	remove_variable = current_reagent
}

remove_known_reagent = {
	if = {
		limit = { has_variable = knows_$REAGENT$ }
		remove_variable = knows_$REAGENT$ 
	}
	if = {
		limit = { has_variable = $REAGENT$_amount }
		remove_variable = $REAGENT$_amount
	}
	if = {
		limit = { has_variable = $REAGENT$_amount_ore }
		remove_variable = $REAGENT$_amount_bar
	}
	if = {
		limit = { has_variable = $REAGENT$_amount_bar }
		remove_variable = $REAGENT$_amount_bar
	}
	change_variable = {
		name = known_reagents_count
		add = -1
	}
}

# can set var reagent_amount to determine how much or it will default to 1
change_reagent_inventory_effect = {
	if = {
		limit = { NOT = { has_variable = reagent_amount } }
		set_variable = { name = reagent_amount value = 1 }
	}
	if = {
		limit = { NOT = { has_variable = $REAGENT$_amount } }
		set_variable = {
			name = $REAGENT$_amount
			value = 0
		}
	}
	change_variable = {
		name = $REAGENT$_amount
		add = var:reagent_amount
	}
	# do special calc for mining
	if = {
		limit = { is_mining_reagent = { REAGENT = $REAGENT$ } }
		if = {
			limit = { NOT = { has_variable = $REAGENT$_amount_ore } }
			set_variable = {
				name = $REAGENT$_amount_ore
				value = 0
			}
		}
		change_variable = {
			name = $REAGENT$_amount_ore
			add = var:reagent_amount
		}
		if = {
			limit = { has_variable = $REAGENT$_amount_bar } 
			set_variable = {
				name = $REAGENT$_amount
				value = {
					add = var:$REAGENT$_amount_bar
					add = var:$REAGENT$_amount_ore
				}
			}
		}
		else = {
			set_variable = {
				name = $REAGENT$_amount
				value = {
					add = var:$REAGENT$_amount_ore
				}
			}
		}
	} 	
}

sell_reagent_effect = {
	determine_reagent_value_effect = {
		REAGENT = $REAGENT$
	}
	switch = {
		trigger = var:commerce_type
		flag:ore = {
			change_variable = {
				name = $REAGENT$_amount_ore
				add = {
					value = var:batch_amount
					multiply = -1
				}
			}
		}
		flag:bar = {
			change_variable = {
				name = $REAGENT$_amount_bar
				add = {
					value = var:batch_amount
					multiply = -1
				}
			}
		}
	}
	send_interface_toast = {
		title = sell_success
		add_short_term_gold = var:reagent_price
	}
	set_variable = {
		name = sell_cooldown
		value = yes
		days = 30
	}
	remove_variable = reagent_price
	if = {
		limit = { 
			var:$REAGENT$_amount_ore ?= 0
		}
		remove_variable = $REAGENT$_amount_ore
	}

	if = {
		limit = { 
			var:$REAGENT$_amount_bar ?= 0
		}
		remove_variable = $REAGENT$_amount_bar
	}
}

determine_reagent_value_effect = {
	# Calculate gold amount for reagent
	set_variable = {
		name = reagent_price
		value = 0
	}
	switch = {
		trigger = var:commerce_type
		flag:ore = {
			change_variable = {
				name = reagent_price
				add = 2
			}
		}
		flag:bar = {
			change_variable = {
				name = reagent_price
				add = 5
			}
		}
		flag:non_mining = {
			change_variable = {
				name = reagent_price
				add = 5
			}
		}
	}
	#By selling location
	if = {
		limit = {
			NOT = { location = { province_has_reagent_trigger = { REAGENT = flag:$REAGENT$ } } }
		}
		change_variable = {
			name = reagent_price
			add = 5
		}
	}
	#By rarity
	if = {
		limit = { 
			reagent_rarity_is_very_common_trigger = { REAGENT = flag:$REAGENT$ }
		}
		change_variable = {
			name = reagent_price
			add = 2
		}
	}
	if = {
		limit = { 
			reagent_rarity_is_common_trigger = { REAGENT = flag:$REAGENT$ }
		}
		change_variable = {
			name = reagent_price
			add = 8
		}
	}
	if = {
		limit = { 
			reagent_rarity_is_uncommon_trigger = { REAGENT = flag:$REAGENT$ }
		}
		change_variable = {
			name = reagent_price
			add = 10
		}
	}
	if = {
		limit = { 
			reagent_rarity_is_rare_trigger = { REAGENT = flag:$REAGENT$ }
		}
		change_variable = {
			name = reagent_price
			add = 13
		}
	}
	if = {
		limit = { 
			reagent_rarity_is_exotic_trigger = { REAGENT = flag:$REAGENT$ }
		}
		change_variable = {
			name = reagent_price
			add = 20
		}
	} 
	#inflation
	if = {
		limit = {
			has_character_flag = sold_crap_ton_of_$REAGENT$_recently
		}
		change_variable = {
			name = reagent_price
			add = -40
		}
	}
	if = {
		limit = {
			has_character_flag = sold_alot_of_$REAGENT$_recently
		}
		change_variable = {
			name = reagent_price
			add = -25
		}
	}
	if = {
		limit = {
			has_character_flag = sold_$REAGENT$_recently
		}
		change_variable = {
			name = reagent_price
			add = -10
		}
	}
	if = {
		limit = { var:reagent_price <= 0 }
		set_variable = {
			name = reagent_price
			value = 2
		}
	}
	change_variable = {
		name = reagent_price
		value = {
			multiply = var:batch_amount #e.g. 5 gold each, selling 10, get 50g
		}
	}
	#add flags
	if = {
		limit = {
			var:batch_amount <= 10
			NOT = { has_character_flag = sold_$REAGENT$_recently }
		}
		add_character_flag = {
			flag = sold_$REAGENT$_recently
			days = 60
		}
	}
	if = {
		limit = {
			OR = {
				var:batch_amount >= 10
				AND = {
					var:batch_amount <= 10
					has_character_flag = sold_$REAGENT$_recently 
				}
			}
		}
		add_character_flag = {
			flag = sold_alot_of_$REAGENT$_recently
			days = 60
		}
	}
	if = {
		limit = {
			OR = {
				var:batch_amount >= 25
				AND = {
					var:batch_amount <= 10
					has_character_flag = sold_alot_of_$REAGENT$_recently 
				}
			}
		}
		add_character_flag = {
			flag = sold_crap_ton_of_$REAGENT$_recently
			days = 75
		}
	}
}

#This executes an effect for a scoped reagent 
effect_for_scoped_reagent = {
	switch = {
		trigger = $REAGENT$
		flag:thorium = { $EFFECT$ = { REAGENT = thorium } }
		flag:obsidium = { $EFFECT$ = { REAGENT = obsidium } }
		flag:gold = { $EFFECT$ = { REAGENT = gold } }
		flag:pyrite = { $EFFECT$ = { REAGENT = pyrite } }
		flag:elementium = { $EFFECT$ = { REAGENT = elementium } }
		flag:iron = { $EFFECT$ = { REAGENT = iron } }
		flag:silver = { $EFFECT$ = { REAGENT = silver } }
		flag:titansteel = { $EFFECT$ = { REAGENT = titansteel } }
		flag:ghost_iron = { $EFFECT$ = { REAGENT = ghost_iron } }
		flag:leystone = { $EFFECT$ = { REAGENT = leystone } }
		flag:cobalt = { $EFFECT$ = { REAGENT = cobalt } }
		flag:khorium = { $EFFECT$ = { REAGENT = khorium } }
		flag:felsteel = { $EFFECT$ = { REAGENT = felsteel } }
		flag:earthen = { $EFFECT$ = { REAGENT = earthen } }
		flag:mithril = { $EFFECT$ = { REAGENT = mithril } }
		flag:kyparite = { $EFFECT$ = { REAGENT = kyparite } }
		flag:nethercite = { $EFFECT$ = { REAGENT = nethercite } }
		flag:jade = { $EFFECT$ = { REAGENT = jade } }
		flag:opal = { $EFFECT$ = { REAGENT = opal } }
		flag:diamond = { $EFFECT$ = { REAGENT = diamond } }
		flag:resonite = { $EFFECT$ = { REAGENT = resonite } }
		flag:night_stone = { $EFFECT$ = { REAGENT = night_stone } }
		flag:mojo_stone = { $EFFECT$ = { REAGENT = mojo_stone } }
		flag:mana_stone = { $EFFECT$ = { REAGENT = mana_stone } }
		flag:ruby = { $EFFECT$ = { REAGENT = ruby } }
		flag:lapis_lazuli = { $EFFECT$ = { REAGENT = lapis_lazuli } }
		flag:kajamite = { $EFFECT$ = { REAGENT = kajamite } }
		flag:singing_crystal = { $EFFECT$ = { REAGENT = singing_crystal } }
	}
}

discover_or_add_reagent_effect = {
	if = { #discover it if doesnt have 
		limit = { NOT = { has_variable = knows_$REAGENT$ } }
		discover_reagent_effect = {
			REAGENT = $REAGENT$
		}
	}
	change_reagent_inventory_effect = {
		REAGENT = $REAGENT$
	}
}	
