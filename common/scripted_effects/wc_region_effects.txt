get_lost_in_region_effect = {
	random_county_in_region = {
		region = $REGION$
		limit = { 
			NOT = { holder = root }
		}
		save_scope_as = adventuring_location
	}
	save_scope_value_as = {
		name = $REGION$_location
		value = yes
	}
}

separate_from_zul_new_hof_effect = { 
	hidden_effect = {
		if = {
			limit = { 
				faith = faith:gurubism
			}
			title:d_guratali_council = { 
				save_scope_as = new_title
			}
		}
		else_if = {
			limit = { 
				faith = faith:drakkism
			}

			title:d_drakatali_council = { 
				save_scope_as = new_title
			}
		}
		else_if = {
			limit = { 
				faith = faith:amism
			}

			title:d_amatali_council = { 
				save_scope_as = new_title
			}
		}
		else_if = {
			limit = { 
				faith = faith:farrism
			}

			title:d_faratali_council = { 
				save_scope_as = new_title
			}
		}

		# Transfer the title.
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}

		scope:new_title = {
			change_title_holder = {
				holder = scope:new_religious_head
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Make it the HoF head.
		faith = { set_religious_head_title = scope:new_title }
	}
}

separate_from_zul_other_effect = { 
	# Give scope:founder an extra piety level, if possible.
	if = {
		limit = { piety_level < max_piety_level }
		add_piety_level = 1
	}

	
	# Try to scope:founder rivals with scope:old_religious_head.
	if = {
		limit = {
			can_set_relation_rival_trigger = { CHARACTER = scope:old_religious_head }
		}
		set_relation_rival = {
			target = scope:old_religious_head
			reason = rival_old_caliph_new_caliph # TODO
		}
	}
	
	hidden_effect = {
		# Try to scope:new_religious_head rivals with scope:old_religious_head.
		if = {
			limit = {
				scope:new_religious_head ?= {
					can_set_relation_rival_trigger = { CHARACTER = scope:old_religious_head }
				}
			}
			scope:new_religious_head ?= {
				set_relation_rival = {
					target = scope:old_religious_head
					reason = rival_old_caliph_new_caliph # TODO
				}
			}
		}
	}
	
	# And sort a bit of stress impact for the gravity of things.
	stress_impact = {
		base = major_stress_impact_gain
		humble = major_stress_impact_gain
		arrogant = medium_stress_impact_loss
	}
}