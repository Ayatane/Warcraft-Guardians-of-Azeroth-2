vanish_historical_character_effect = {
	death = { death_reason = death_vanished }
}
purge_historical_character_effect = {
	set_to_lowborn = yes
	# Basically reset parents
	if = {
		limit = { exists = father }
		# set_father = dummy_male # DON'T USE dummy, IT CRASH THE GAME
	}
	if = {
		limit = { exists = real_father }
		# set_real_father = dummy_male # DON'T USE dummy, IT CRASH THE GAME
	}
	if = {
		limit = { exists = mother }
		# set_mother = dummy_female # DON'T USE dummy, IT CRASH THE GAME
	}
	if = {
		limit = { is_alive = yes }
		death = { death_reason = death_vanished }
	}
}

add_patron_trait_character_effect = {
	# May add traits here later
}
add_fan_trait_character_effect = {
	# May add traits here later
}

add_1_perk_in_TYPE_TREE_effect = {
	# if = {
		# limit = {
			# perks_in_tree = { tree = $TYPE$_tree_$TREE$ value < 9 }
		# }

		if = { # switch breaks it somehow
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_1 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_1
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_2 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_2
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_3 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_3
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_4 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_4
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_5 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_5
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_6 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_6
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_7 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_7
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_8 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_8
		}
		else_if = {
			limit = {
				NOT = { has_perk = $TYPE$_tree_$TREE$_perk_9 }
			}

			add_perk = $TYPE$_tree_$TREE$_perk_9
		}
		# else = { add_$TYPE$_lifestyle_perk_points = 1 }

	# }
}

add_perks_in_nonelemental_MAGIC_lifestyle_effect = {
	if = {
		limit = { has_variable = wc_$MAGIC$_magic_lifestyle_additional_perks_variable }

		if = {
			limit = {
				has_character_flag = wc_$MAGIC$_magic_lifestyle_perks_were_reset_flag
			}

			add_$MAGIC$_magic_lifestyle_perk_points = var:wc_$MAGIC$_magic_lifestyle_additional_perks_variable
		}
		else = {
			while = {
				count = var:wc_$MAGIC$_magic_lifestyle_additional_perks_variable

				random_list = {
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_1 value < 9 }
						}

						add_1_perk_in_TYPE_TREE_effect = { TYPE = $MAGIC$_magic TREE = 1 }
					}
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_2 value < 9 }
						}

						add_1_perk_in_TYPE_TREE_effect = { TYPE = $MAGIC$_magic TREE = 2 }
					}
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_3 value < 9 }
						}

						add_1_perk_in_TYPE_TREE_effect = { TYPE = $MAGIC$_magic TREE = 3 }
					}
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_1 value = 9 }
							perks_in_tree = { tree = $MAGIC$_magic_tree_2 value = 9 }
							perks_in_tree = { tree = $MAGIC$_magic_tree_3 value = 9 }
						}

						add_$MAGIC$_magic_lifestyle_perk_points = 1
					}
				}
			}
		}

		remove_variable = wc_$MAGIC$_magic_lifestyle_additional_perks_variable

	}
}

add_perks_in_elemental_MAGIC_lifestyle_effect = {
	if = {
		limit = { has_variable = wc_$MAGIC$_magic_lifestyle_additional_perks_variable }

		if = {
			limit = {
				has_character_flag = wc_$MAGIC$_magic_lifestyle_perks_were_reset_flag
			}

			add_$MAGIC$_magic_lifestyle_perk_points = var:wc_$MAGIC$_magic_lifestyle_additional_perks_variable
		}
		else = {
			while = {
				count = var:wc_$MAGIC$_magic_lifestyle_additional_perks_variable

				random_list = {
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_1 value < 9 }
						}

						add_1_perk_in_TYPE_TREE_effect = { TYPE = $MAGIC$_magic TREE = 1 }
					}
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_2 value < 9 }
						}

						add_1_perk_in_TYPE_TREE_effect = { TYPE = $MAGIC$_magic TREE = 2 }
					}
					1 = {
						trigger = {
							perks_in_tree = { tree = $MAGIC$_magic_tree_1 value = 9 }
							perks_in_tree = { tree = $MAGIC$_magic_tree_2 value = 9 }
						}

						add_$MAGIC$_magic_lifestyle_perk_points = 1
					}
				}
			}

			if = { # If character doesn't have variable yet
				limit = { NOT = { has_variable = wc_$MAGIC$_favour_variable } }

				set_variable = { name = wc_$MAGIC$_favour_variable value = wc_starting_$MAGIC$_favour_value }
			}
			wc_ELEMENT_favour_lifestyle_check_effect = { ELEMENT = $MAGIC$ }
		}

		remove_variable = wc_$MAGIC$_magic_lifestyle_additional_perks_variable

	}
}

add_perks_in_physical_lifestyle_effect = {
	if = {
		limit = { has_variable = wc_endurance_physical_lifestyle_additional_perks_variable }

		while = {
			count = var:wc_endurance_physical_lifestyle_additional_perks_variable

			add_1_perk_in_TYPE_TREE_effect = { TYPE = physical TREE = 1 }
		}
		remove_variable = wc_endurance_physical_lifestyle_additional_perks_variable
	}
	if = {
		limit = { has_variable = wc_dexterity_physical_lifestyle_additional_perks_variable }

		while = {
			count = var:wc_dexterity_physical_lifestyle_additional_perks_variable

			add_1_perk_in_TYPE_TREE_effect = { TYPE = physical TREE = 2 }
		}
		remove_variable = wc_dexterity_physical_lifestyle_additional_perks_variable
	}
	if = {
		limit = { has_variable = wc_strength_physical_lifestyle_additional_perks_variable }

		while = {
			count = var:wc_strength_physical_lifestyle_additional_perks_variable

			add_1_perk_in_TYPE_TREE_effect = { TYPE = physical TREE = 3 }
		}
		remove_variable = wc_strength_physical_lifestyle_additional_perks_variable
	}
}