create_artifact_ashbringer_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ashbringer_name
		description = ashbringer_desc
		type = sword
		visuals = ashbringer
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = ashbringer_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ashbringer
		save_scope_as = illustrous
	}
}
create_artifact_corrupted_ashbringer_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = corrupted_ashbringer_name
		description = corrupted_ashbringer_desc
		type = sword
		visuals = corrupted_ashbringer
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = corrupted_ashbringer_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = corrupted_ashbringer
		save_scope_as = illustrous
	}
}
create_artifact_felomelorn_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = felomelorn_name
		description = felomelorn_desc
		type = sword
		visuals = felomelorn
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = felomelorn_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = felomelorn
		save_scope_as = illustrous
	}
}
create_artifact_doomhammer_classic_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = doomhammer_name
		description = doomhammer_classic_desc
		type = hammer
		visuals = doomhammer_classic
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = doomhammer_classic_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = doomhammer_classic
		save_scope_as = illustrous
	}
}
create_artifact_doomhammer_frostwolf_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = doomhammer_name
		description = doomhammer_frostwolf_desc
		type = hammer
		visuals = doomhammer_frostwolf
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = doomhammer_frostwolf_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = doomhammer_frostwolf
		save_scope_as = illustrous
	}
}