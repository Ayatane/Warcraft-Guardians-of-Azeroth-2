widget = {
	name = "wc_widget_professions"
	parentanchor = top|right
	layer = windows_layer
	allow_outside = yes
	# So it's not possible to click county behind the interface
	alwaystransparent = no
	filter_mouse = all
	#using = Window_Size_MainTab
	size = { 655 100% }

	visible = "[GetVariableSystem.HasValue( 'right_window_open', 'professions' )]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetScriptedGui('check_cd_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
		on_start = "[GetScriptedGui('open_professions_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		on_start = "[GetScriptedGui('close_professions_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'none' ) )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }

		using = Window_Background

		widget = {
			name = "profession_picker"
			allow_outside = yes
			size = { 100% 100% }
			
			vbox = {
				using = Window_Margins
				
				scrollbox = {

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					scrollbar_vertical = {
						using = Scrollbar_Vertical_White
					}
					blockoverride "scrollbox_background_fade"
					{
					}
					blockoverride "scrollbox_background"
					{
					}
					blockoverride "scrollbox_content"
					{
						
						header_with_picture = {
							layoutpolicy_horizontal = expanding
							size = { 0 160 }
							blockoverride "header_text"
							{
								text = "PROFESSIONS_WINDOW_TITLE"
							}
							
							blockoverride "illustration_texture" {
								texture = "gfx/interface/illustrations/window_headers/header_professions.dds"
								alpha = 0.3
								modify_texture = {
									texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
									blend_mode = alphamultiply
								}
							}
							
							blockoverride "button_close"
							{
								onclick = "[GetVariableSystem.Clear( 'right_window_open' )]"
							}
						}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_top = 10
							
							# background = { #replace later
							# 	texture = "gfx/interface/illustrations/event_scenes/wc_horde_vs_human.dds"
							# 	margin = { -5 0 }
							# 	fittype = end
							# 	alpha = 0.4
							# 	framesize = { 1200 848 }

							# 	modify_texture = {
							# 		texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							# 		blend_mode = alphamultiply
							# 	}500
							# }
							spacing = 500
							hbox = {
								allow_outside = yes
								datacontext = "[GetPlayer.MakeScope.GetCharacter]"
								spacing = 275
								professions_box = {
									allow_outside = yes
									parentanchor = top
									visible = yes
									name = "profession_1_view"
									datacontext = "[GetPlayer.MakeScope.Var('profession_1')]"
								}
	
								professions_box = {
									allow_outside = yes
									parentanchor = top
									visible = yes
									name = "profession_2_view"
									datacontext = "[Character.MakeScope.Var('profession_2')]"
								}
								
							}
							
							# hbox = {
							# 	size = { 10 10 }
							# 	layoutpolicy_vertical = fixed
							# 	# button_primary = {
							# 	# 	allow_outside = yes
							# 	# 	positon = { 20 10}
							# 	# 	size = { 160 50 }
							# 	# 	name = "change_button"
							# 	# 	tooltip = "CHANGE_PROFESSION_TT"
							# 	# 	text = "change_profession_text"
							# 	# 	enabled = ""
							# 	# 	#enabled = "[GetScriptedGui('check_cd_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End).Not(Character.MakeScope.Var(Concatenate(Scope.GetFlagName,'_oncd')).IsSet)]"
							# 	# 	#enabled = "[Not(Character.MakeScope.Var(Concatenate(Scope.GetFlagName,'_oncd')).IsSet)]"
							# 	# 	visible = "[HasProfessionFlag]"
							# 	# }
							# }
							
						}
					}
				}
			}
		}
	}
	window = {
		position = { -50 500 }
		name = "profession_list_window"
		datacontext = "[GetPlayer.MakeScope.GetCharacter]"
		visible = "[And(GetVariableSystem.HasValue('profession_list_window_open', 'yes'),IsInGame)]"
		parentanchor = top|hcenter

		layer = middle
		using = Window_Background
		using = Window_Decoration_Spike
		allow_outside = yes 

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}
	
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		vbox = {
			set_parent_size_to_minimum = yes
			using = Window_Margins
			allow_outside = yes
			header_pattern = {
				layoutpolicy_horizontal = expanding
	
				blockoverride "header_text"
				{
					text = "PROFESSIONS_WINDOW_TITLE"
				}
	
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set('profession_list_window_open', 'no')]"
				}
			}
			spacing = 20
			scrollbox = {
				size = { 425 250 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					margin_right = 10
					margin_left = 0
					margin_top = 10
					fixedgridbox = {
						minimumsize = { 400 1 }
						addcolumn = 30%
						addrow = 75
						flipdirection = yes
						maxhorizontalslots = 1
						datamodel_wrap = 1
						datamodel = "[GetTraitsWithFlag('profession_trait')]"
						item = {
							button_standard = {
								size = { 400 75 }
								# Have to localize it, other wise it will say "miner" instead of mining
								enabled = "[Not(Character.HasTrait(Trait.Self))]"
								text_single = {
									parentanchor = center
									position = { 15 -5 }
									text = "[Localize(Trait.GetNameNoTooltip(GetNullCharacter))]"
									fontsize = 20
								}
								tooltip = "[Trait.GetFullDescription(GetNullCharacter, Character.GetFaith)]"
								icon = {
									size = { 65 65 }
									position = { 20 5 }
									texture = "[Trait.GetIcon(GetNullCharacter)]"
								}
								down = "[GetVariableSystem.HasValue('selected_trait', Trait.GetNameNoTooltip(GetNullCharacter))]"
								onrightclick = "[GetVariableSystem.Clear('selected_trait')]"
								onclick = "[GetVariableSystem.Set('selected_trait', Trait.GetNameNoTooltip(GetNullCharacter))]"
								background = {
									using = Background_Area_Solid
								}
							}
						}
					}
				}
			}		
			button_primary = {
				enabled = "[GetVariableSystem.Exists('selected_trait')]"
				text = "PROFESSION_CONFIRM_TEXT"
				onclick = "[GetVariableSystem.Set('profession_list_window_open', 'no')]"
				onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'yes')]"
			}
		}
	}
	window = {
		name = "profession_confirm_window"
		layer = middle
		visible = "[And(GetVariableSystem.HasValue('profession_confirm_window_open', 'yes'),IsInGame)]"
		using = Window_Background
		using = Window_Decoration_Spike
		allow_outside = yes 
		parentanchor = center
		position = { -650 0 }
		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}
	
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		vbox = {
			minimumsize = { 400 50 }
			spacing = 20
			set_parent_size_to_minimum = yes
			using = Window_Margins
			allow_outside = yes
			header_pattern = {
				layoutpolicy_horizontal = expanding
	
				blockoverride "header_text"
				{
					text = "PROFESSION_CONFIRM_TEXT"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'no')]"
				}
			}
			
			text_single = {
				margin_left = 10
				margin_right = 10
				align = center
				text = "PROFESSION_CONFIRM_TEXT_DESC"
				#text = "[GetVariableSystem.Get('selected_trait')]"
				fontsize = 16
			}

			button_primary = {
				enabled = "[GetVariableSystem.Exists('selected_trait')]"
				text = "PROFESSION_CONFIRM_TEXT"
				#onclick = "[GetScriptedGui('save_profession_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
				onclick = "[GetScriptedGui('save_profession_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('selected_profession', MakeScopeFlag(GetVariableSystem.Get('selected_trait'))).End)]"
				onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'no')]"
				onclick = "[GetVariableSystem.Clear('selected_trait')]"
			}
		}
	}
}
types professions_types {
	type professions_box = widget {
		widget = {
			allow_outside = yes
			block "datacontext" {}
			vbox = {
				name = "basic_profession_display"
				background = {
					using = Background_Area_Dark
					alpha = 0.7
					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
						blend_mode = alphamultiply
					}
				}
				margin = { 35 175 }
				spacing = 20
				position = { -135 -350 }
				text_single = { 
					visible = "[Not(HasProfessionFlag)]"
					#text = "[Scope.GetFlagName]" #for testing
					text = "choose_profession_text"
					fontsize = 20
					position = { -10 0 }
				}
				text_single = {
					visible = "[HasProfessionFlag]"
					text = "[Localize(Concatenate('trait_', Scope.GetFlagName))]"
					fontsize = 20
				}
				button_standard = {
					size = { 150 150 }
					
					icon = {
						parentanchor = center
						position = { 0 0 }
						size = { 200 200 }
						visible = "[HasProfessionFlag]"
						texture = "[GetTrait(Scope.GetFlagName).GetIcon( GetNullCharacter )]"
					}
				}
				vbox = {
					name = "profession_details"
					spacing = 15
					vbox = {
						visible = "[HasProfessionFlag]"
						spacing = 10
						
						hbox = {
							datacontext = "[GetTrait(Scope.GetFlagName).GetTraitTrackByKey(Scope.GetFlagName)]"
							text_single = {
								allow_outside = no
								fontsize = 20
								text = "[Character.GetTraitTrackLevel( Trait.Self, TraitLevelTrack.Self )]"
							}
					
						}	
						
						text_single = {
							text = "PROFESSION_PROGRESS_TEXT"
						}
						
						text_single = {
							visible = "[Equal( 'Mining', Scope.GetFlagName )]"
							text = "KNOWN_REAGENT_TEXT"
						}
						# text_single = {
						# 	visible = "[Not(Or(Or(ObjectsEqual( 'Mining', Scope.GetFlagName ), ObjectsEqual( 'Herbalism', Scope.GetFlagName )), ObjectsEqual( 'Skinning', Scope.GetFlagName )))]"
						# 	text = "KNOWN_RECIPE_TEXT"
						# }
						text_single = {
							text = "ITEMS_MADE_TEXT"
						}
					}
					button_standard = {
						enabled = yes
						onclick = "[GetVariableSystem.Set('profession_list_window_open','yes')]"
						name = "choose_button"
						text = "button_unlanded"
						visible = "[Not(HasProfessionFlag)]"
					}
					button_standard = {
						tooltip = "[Localize(Concatenate('practice_', Scope.GetFlagName))]"
						name = "practice_button"
						text = "[Localize(Concatenate('button_', Scope.GetFlagName))]"
						visible = "[HasProfessionFlag]"
					}
					# button_primary = {
					# 	size = { 150 50 }
					# 	text = "[GetPlayer.MakeScope.Var('profession_1_cd')]"
					# 	#text = "change_profession_text"
					# 	visible = "[Not(Equals(GetPlayer.MakeScope.Var('profession_1_cd').GetValue, '0')]"
					# }
				}
			}
		}
	}
}