widget = {
	name = "wc_widget_professions"
	parentanchor = top|right
	layer = windows_layer
	allow_outside = yes
	# So it's not possible to click county behind the interface
	alwaystransparent = no
	filter_mouse = all
	#using = Window_Size_MainTab
	size = { 655 100% }

	visible = "[GetVariableSystem.HasValue( 'right_window_open', 'professions' )]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Clear('selected_trait')]"
		on_start = "[GetVariableSystem.Set('profession_window_tabs', 'professions_view' )]"
		on_start = "[GetScriptedGui('open_professions_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'none' ) )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 25 }

		using = Window_Background

		widget = {
			name = "profession_picker"
			allow_outside = yes
			size = { 100% 100% }
			vbox = {
				using = Window_Margins
				
				scrollbox = {

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_background_fade"
					{
					}
					blockoverride "scrollbox_background"
					{
					}
					blockoverride "scrollbox_content"
					{
						
						header_with_picture = {
							layoutpolicy_horizontal = expanding
							size = { 0 240 }
							blockoverride "header_text"
							{
								text = "PROFESSIONS_WINDOW_TITLE"
							}
							blockoverride "size" {
								size = { 100% 266 }
							}
							blockoverride "illustration_texture" {
								texture = "gfx/interface/illustrations/window_headers/header_professions.dds"
								alpha = 0.3
								modify_texture = {
									texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
									blend_mode = alphamultiply
								}
							}
							
							blockoverride "button_close"
							{
								onclick = "[GetVariableSystem.Clear( 'right_window_open' )]"
							}

							vbox = {
								margin_top = 45
								margin_bottom = 12
								margin_left = 12
								margin_right = 12
								layoutpolicy_vertical = expanding
								hbox = {
									layoutpolicy_horizontal = expanding
									visible = "[Not(Or(PlayerHasVar('profession_1'),PlayerHasVar('profession_2')))]"
									
									text_label_center = {
										text = "PROFESSION_NONE_CHOSEN"
										default_format = "#low;italic"
										margin_top = 2
									}
								}
								hbox = {
									layoutpolicy_horizontal = expanding
									visible = "[And(Or(PlayerHasVar('profession_1'),PlayerHasVar('profession_2')), Not(PlayerHasVar('current_profession_activity')))]"
									
									text_label_center = {
										text = "PROFESSION_NO_ACTIVITY"
										default_format = "#low;italic"
										margin_top = 2
										margin_bottom = 8
									}
								}
								hbox = {
									visible = "[PlayerHasVar('current_profession_activity')]"
									layoutpolicy_vertical = fixed
									layoutpolicy_horizontal = fixed
								}
							}
						}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							
							background = { 
								texture = "gfx/interface/illustrations/event_scenes/tauren_cave.dds"
								fittype = end
								alpha = 0.3

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
									blend_mode = alphamultiply
								}
							}
							
							# TABS
							hbox = {
								layoutpolicy_horizontal = expanding
								margin_bottom = 5

								button_tab = {
									layoutpolicy_horizontal = expanding
									onclick = "[GetVariableSystem.Set('profession_window_tabs', 'professions_view' )]"
									down = "[GetVariableSystem.HasValue( 'profession_window_tabs', 'professions_view' )]"

									text_single = {
										text = "PROFESSIONS_WINDOW_TITLE"
										parentanchor = center
			
										maximumsize = { 400 -1 }
										default_format = "#low"
									}
								}

								button_tab = {
									layoutpolicy_horizontal = expanding
									onclick = "[GetVariableSystem.Set( 'profession_window_tabs', 'reagents_view' )]"
									down = "[GetVariableSystem.HasValue( 'profession_window_tabs', 'reagents_view' )]"
									text_single = {
										text = "REAGENTS_WINDOW_TITLE"
										parentanchor = center
			
										maximumsize = { 400 -1 }
										default_format = "#low"
									}
								}
							}

							# VIEWS
							vbox = {
								name = "profession_tab_view"
								visible = "[GetVariableSystem.HasValue( 'profession_window_tabs', 'professions_view' )]"
								allow_outside = yes
								datacontext = "[GetPlayer.MakeScope.GetCharacter]"
								vbox = {
									visible = "[Not(Or(PlayerHasVar('profession_1'), PlayerHasVar('profession_2')))]"
								}
								vbox = {
									visible = "[Or(PlayerHasVar('profession_1'), PlayerHasVar('profession_2'))]"
									spacing = 10
									name = "current_professions_box"
									text_label_center = {
										text = "YOUR_PROFESSIONS"
									}
									professions_box = {
										visible = "[PlayerHasVar('profession_1')]"
										block "datacontext"
										{
											datacontext = "[PlayerGetVar('profession_1')]"
										}
									}
									
									professions_box = {
										visible = "[PlayerHasVar('profession_2')]"
										block "datacontext"
										{
											datacontext = "[PlayerGetVar('profession_2')]"
										}
									}

									hbox = {
										spacing = 50
										text_label_center = {
											text = "KNOWN_REAGENTS_TEXT"
										}
										text_label_center = {
											text = "LAST_DISCOVERED_REAGENT_TEXT"
											tooltip = "LD_REAGENT_TOOLTIP"
										}
									}
								}
								
								vbox = {
									spacing = 10
									name = "select_professions_box"
									text_label_center = {
										text = "CHOOSE_PROFESSION_TEXT"
									}
									visible = "[Not(And(PlayerHasVar('profession_1'), PlayerHasVar('profession_2')))]"
								
									fixedgridbox = {
										minimumsize = { 500 1 }
										addcolumn = 30%
										addrow = 90
										flipdirection = yes
										maxhorizontalslots = 1
										datamodel_wrap = 1
										datamodel = "[GetTraitsWithFlag('profession_trait')]"
										item = {
											button_standard = {
												size = { 500 75 }
												# Have to localize it, other wise it will say "miner" instead of mining
												enabled = "[Not(Character.HasTrait(Trait.Self))]"
												text_single = {
													parentanchor = left
													position = { 20 20 }
													text = "[Localize(Trait.GetNameNoTooltip(GetNullCharacter))]"
													fontsize = 20
												}
												tooltip = "[Trait.GetFullDescription(GetNullCharacter, Character.GetFaith)]"
												down = "[GetVariableSystem.HasValue('selected_trait', Trait.GetNameNoTooltip(GetNullCharacter))]"
												onrightclick = "[GetVariableSystem.Clear('selected_trait')]"
												onclick = "[GetVariableSystem.Set('selected_trait', Trait.GetNameNoTooltip(GetNullCharacter))]"
												onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'yes')]"
												icon = {
													parentanchor = right|top
													size = { 300 75 }
													texture = "[GetProfessionIllustration(Trait.GetNameNoTooltip(GetNullCharacter))]"
													alpha = 0.9
													using = Mask_Rough_Edges
													mirror = horizontal
													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
														blend_mode = alphamultiply
													}
												}
											}
										}			
										
									}
								}

								vbox = {
									visible = "[Not(Or(PlayerHasVar('profession_1'), PlayerHasVar('profession_2')))]"
								}
							}

							vbox = {
								name = "reagent_tab_view"
								visible = "[GetVariableSystem.HasValue( 'profession_window_tabs', 'reagents_view' )]"
								allow_outside = yes
								datacontext = "[GetPlayer.MakeScope.GetCharacter]"
								parentanchor = top
								spacing = 10
								text_single = {
									text = "KNOWN_REAGENTS_TEXT"
									fontsize = 18
								}
								#need inventory bg
								vbox = {
									name = "mining_reagents"
									#visible = "[Character.HasTrait(GetTrait('profession_mining'))]"
									text_label_center = {
										text = "MINING_REAGENTS_TEXT"
									}
									spacing = 10
									fixedgridbox = {
										addcolumn = 100
										addrow = 100
										flipdirection = yes
							
										datamodel_wrap = 5
										setitemsizefromcell = yes
										datamodel = "[GetGlobalList('mining_reagents')]"
										item = {
											button_standard = {
												size = { 100 100 }
												buttonText = {
													text_single = {
														position = { -10 -10 }
														parentanchor = bottom|right
														visible = "[And(PlayerHasVar(Concatenate('knows_reagent_flag:', Scope.GetFlagName)), Not(PlayerHasVar(Concatenate(Scope.GetFlagName, '_count'))))]"
														raw_text = "0"
														#text = "[Scope.GetFlagName]"
														fontsize = 16
													}
												}
												buttonText = {
													text_single = {
														position = { -10 -10 }
														parentanchor = bottom|right
														visible = "[PlayerHasVar(Concatenate(Scope.GetFlagName, '_count'))]"
														text = "[PlayerGetVar(Concatenate(Scope.GetFlagName, '_count')).GetValue]"
														fontsize = 16
													}
												}
												hbox = {
													tooltip = "REAGENT_TOOLTIP_TEXT_KNOWN_MINING"
													visible = "[PlayerHasVar(Concatenate('knows_reagent_flag:', Scope.GetFlagName))]"
												}

												hbox = {
													tooltip = "REAGENT_TOOLTIP_TEXT_UNKNOWN"
													visible = "[Not(PlayerHasVar(Concatenate('knows_reagent_flag:', Scope.GetFlagName)))]"
												}
												
												hbox = {
													visible = "[Not(PlayerHasVar(Concatenate('knows_reagent_flag:', Scope.GetFlagName)))]"
													text_single = {
														text = "?"
														fontsize = 30
													}
												}														
												icon = {
													visible = "[PlayerHasVar(Concatenate('knows_reagent_flag:', Scope.GetFlagName))]"
													using = Mask_Rough_Edges
													parentanchor = center
													size = { 75 75 }
													texture = "[GetProfessionIllustration(Scope.GetFlagName)]"
												}
											}
										}
									}
								}
							
							}
						}
					}
				}
			}
		}
	}
	window = {
		name = "profession_confirm_window"
		layer = middle
		visible = "[And(GetVariableSystem.HasValue('profession_confirm_window_open', 'yes'),IsInGame)]"
		using = Window_Background
		using = Window_Decoration_Spike
		allow_outside = yes 
		parentanchor = center
		position = { -650 0 }
		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}
	
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		vbox = {
			minimumsize = { 400 50 }
			spacing = 20
			set_parent_size_to_minimum = yes
			using = Window_Margins
			allow_outside = yes
			header_pattern = {
				layoutpolicy_horizontal = expanding
	
				blockoverride "header_text"
				{
					text = "PROFESSION_CONFIRM_TEXT"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'no')]"
				}
			}
			
			text_single = {
				margin_left = 10
				margin_right = 10
				align = center
				text = "PROFESSION_CONFIRM_TEXT_DESC"
				#text = "[GetVariableSystem.Get('selected_trait')]"
				fontsize = 16
			}

			button_primary = {
				enabled = "[GetVariableSystem.Exists('selected_trait')]"
				text = "PROFESSION_CONFIRM_TEXT"
				onclick = "[GetScriptedGui('save_profession_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('selected_profession', MakeScopeFlag(GetVariableSystem.Get('selected_trait'))).End)]"
				onclick = "[GetVariableSystem.Set('profession_confirm_window_open', 'no')]"
				onclick = "[GetVariableSystem.Clear('selected_trait')]"
			}
		}
	}
}

types professions_types {
	type professions_box = hbox {
		vbox = {
			spacing = 10
			name = "basic_profession_display"
			fixedgridbox = {
				minimumsize = { 500 1 }
				addcolumn = 30%
				addrow = 175
				flipdirection = yes
				maxhorizontalslots = 1
				datamodel_wrap = 1
				datamodel = "[GetTrait(Scope.GetFlagName).GetLevelTracks]"
				item = {
					button_standard = {
						using = Mask_Rough_Edges
						size = { 500 150 }
						buttonText = {
							text_single = {
								text = "[TraitLevelTrack.GetName]"
								size = { 100% 100% }
								autoresize = no
								#margin = { 10 0 }
								align = center
								position = { 0 -50 }
								fontsize = 18
							}
						}
						text_single = {	
							text = "ITEMS_MADE_TEXT"
							size = { 100% 100% }
							autoresize = no
							#margin = { 10 0 }
							align = center
							position = { -175 -25 }
							fontsize = 18
							alwaystransparent = no
						}
						text_single = {	
							text = "PROFESSION_PROGRESS_TEXT"
							size = { 100% 100% }
							autoresize = no
							#margin = { 10 0 }
							align = center
							position = { -120 20 }
							fontsize = 16
							alwaystransparent = no
						}
						#### PROGRESSBAR ###
						progressbar = {
							name = "progress_bar_blocked"
							parentanchor = bottom
							size = { 210 15 }
							position = { 20 -20 }
							
							progresstexture = "gfx/interface/progressbars/war_progress_blue.dds"

							noprogresstexture = "gfx/interface/progressbars/war_progress_noprogress.dds"

							value = "[PlayerGetVar(Concatenate(TraitLevelTrack.GetName, '_xp')).GetValue]"

							direction = horizontal
							alwaystransparent = yes
						}	
						button_standard = {
							size = { 100 25 }
							parentanchor = right
							position = { -25 25 }
							enabled = "[Not(And(PlayerHasVar('profession_1_cooldown'), PlayerHasVar('profession_2_cooldown')))]"
							text = "REMOVE_PROFESSION_TEXT"
						}
						button_primary = {
							size = { 175 50 }
							parentanchor = right
							position = { -25 75 }
							text = "[Localize(Concatenate('practice_', TraitLevelTrack.GetName))]"
							
						}
						icon = {
							parentanchor = right|top
							size = { 500 150 }
							texture = "[GetProfessionIllustration(TraitLevelTrack.GetName)]"
							alpha = 0.3
							using = Mask_Rough_Edges
							mirror = horizontal
						}
						blockoverride "highlight_icon" {}
						blockoverride "button_standard_mouseover" {}
					}
				}
			}
			# button_standard = {
			# 	size = { 500 150 }
			# 	text = "[Localize(Concatenate('trait_', Scope.GetFlagName))]"
			# 	icon = {
			# 		parentanchor = right|top
			# 		size = { 500 150 }
			# 		texture = "[GetProfessionIllustration(Localize(Concatenate('trait_', Scope.GetFlagName)))]"
			# 		alpha = 0.6
			# 		using = Mask_Rough_Edges
			# 		mirror = horizontal
					
			# 	}
			# }
			# button_standard = {
			# 	size = { 500 150 }
			# 	text = "[Localize(Concatenate('trait_', Scope.GetFlagName))]"
			# 	icon = {
			# 		parentanchor = right|top
			# 		size = { 500 150 }
			# 		texture = "[GetProfessionIllustration(Localize(Concatenate('trait_', Scope.GetFlagName)))]"
			# 		alpha = 0.6
			# 		using = Mask_Rough_Edges
			# 		mirror = horizontal
					
			# 	}
			# }
		}
	}
}