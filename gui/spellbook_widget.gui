window = {
	name = "widget_spellbook"
	position = { 0 20 }
	parentanchor = center
	allow_outside = yes
	layer = top

	visible = "[GetVariableSystem.HasValue( 'spellbook_window', 'yes' )]"

	size = { 1060 900 }
	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		on_start = "[GetScriptedGui( 'open_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		on_start = "[GetScriptedGui( 'close_spellbook_lite_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	vbox = {
		using = Window_Margins
		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "SPELLBOOK_HEADER_TEXT"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Clear( 'spellbook_window' )]"
				onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
				onclick = "[GetVariableSystem.Clear( 'current_elemental_type' )]"
				onclick = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
				onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
			}
		}

		vbox = {
			margin = { 0 10 }
			spacing = 10
			vbox = {
				spacing = 10
				layoutpolicy_horizontal = expanding				

				hbox = {
					layoutpolicy_horizontal = fixed	
					layoutpolicy_vertical = expanding				
			
					spacing = 10
					name = "magic_school_buttons"

					widget = {
						name = "magic_school_spells"
						size = { 100 500 }
						scrollbox = {					
							size = { 100 500 }
							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_content"
							{
								dynamicgridbox = {
									datamodel = "[GetPlayer.MakeScope.GetList( 'spell_types' )]"
									item = {
										button_tab_vertical = {
											visible = "[GetScriptedGui( 'knows_magic_class_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell_class', MakeScopeFlag(Scope.GetFlagName)).End))]"
											size = { 70 70 }
											icon = {
												parentanchor = center
												size = { 45 45 }
												texture = "[GetCultureInnovationType(Concatenate(Scope.GetFlagName, '_magic')).GetIcon]"
												tooltip = "[Localize(Concatenate('game_concept_wc_spell_school_', Scope.GetFlagName))]"
											}
											onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
											onclick = "[GetScriptedGui( 'clear_selected_spell_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											onclick = "[GetScriptedGui( 'set_current_spell_class_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'class', MakeScopeFlag(Scope.GetFlagName)).End))]"
											down = "[GetVariableSystem.HasValue( 'current_magic_selected', Scope.GetFlagName )]"
											onclick = "[GetVariableSystem.Set( 'current_magic_selected', Scope.GetFlagName )]"
										}
									}
								}
							}
						}
						
						background = {
							using = Background_Area
						}
					}

					widget = {
						name = "spell_select"
						size = { 600 500 }
						background = {
							using = Background_Area
						}
						
						text_single = {
							text = "CHOOSE_CLASS_TEXT"
							fontsize = 20
							parentanchor = center
							visible = "[Not(GetVariableSystem.Exists( 'current_magic_selected' ))]"
						}

						scrollbox = {
							visible = "[GetVariableSystem.Exists( 'current_magic_selected' )]"
							size = { 600 500 }
							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_content" 
							{
								dynamicgridbox = {
									datamodel = "[GetGlobalList(Concatenate(GetVariableSystem.Get('current_magic_selected'), '_spells'))]"
									item = {
										button_standard = {
											size = { 500 75 }
											buttonText = {
												text_single = {
													size = { 20 20 }
													using = Font_Size_Big
													parentanchor = center
													position = { 0 -5 }
													text = "[Localize(Concatenate('game_concept_wc_spell_', Scope.GetFlagName))]"
												}
											}
											onclick = "[GetVariableSystem.Set( 'current_spell_selected', Scope.GetFlagName )]"
											down = "[GetVariableSystem.HasValue( 'current_spell_selected', Scope.GetFlagName )]"
											onclick = "[GetScriptedGui( 'set_current_spell_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End))]"
											enabled = "[GetScriptedGui('can_select_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
											tooltip = "[GetScriptedGui('can_select_spell_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
											hbox = {
												visible = "[GetScriptedGui('can_select_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
												tooltipwidget = {
													widget_spell_breakdown_tooltip = {
														datacontext = "[MakeScopeFlag(Scope.GetFlagName)]"
													}
												}
											}
										}
										
									}
								}
							}
						}
					}

					widget = {
						name = "target_selection"
						size = { 250 500 }
						text_single = {
							parentanchor = center
							text = "CHOOSE_TARGET_TEXT"
							visible = "[Not(GetScriptedGui('player_has_targets_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
						}

						background = {
							using = Background_Area
						}

						scrollbox = {
							size = { 250 500 }
							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_content"
							{
								vbox = {
									spacing = 10
									text_single = {
										text = "CURRENT_TARGET_TEXT"
										default_format = "#bold"
									}

									vbox = {
										spacing = 20
										visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_character_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
										name = "target_character_vbox"
										datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' )]"

										portrait_body = {
											datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char]"
											blockoverride "opinion_box"
											{}
											blockoverride "portrait_icons"
											{}
										}

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char.GetShortUIName]"
											default_format = "#T"
											align = center
										}
										
										vbox = {
											spacing = 5

											hbox = {
												layoutpolicy_horizontal = expanding
												spacing = 10
						
												text_single = {
													layoutpolicy_horizontal = expanding
													text = "CURRENT_MR_TEXT"
													tooltip = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).GetScriptValueDesc(Concatenate(Concatenate('wc_', GetVariableSystem.Get('current_magic_selected')), '_magic_resistance_value'))]"
												}
											}
											divider_light = { layoutpolicy_horizontal = expanding }
										}		
									}

									hbox = {
										visible = "[GetScriptedGui('spell_target_is_province_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
										
										hbox = {
											margin_top = 10
											visible = "[Not(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet)]"
											button_standard = {
												buttonText = {
													text_single = {
														position = { 0 -2 }
														parentanchor = center
														text = "DEFAULT_TEXT"
													}
												}
												onclick = "[SetMapMode('baronies')]"
												onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"				
												onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
												onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
												onclick = "[GetVariableSystem.Set('spellbook_window', 'no')]"
											}
										}

										hbox = {
											visible = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet]"
										}
									}

									
									# spell_target_province_display_vbox = {
									# 	visible = "[GetScriptedGui('spell_target_is_province_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
									# }
								}
							}
						}
					}
				}

				hbox = {
					name = "effects_box"
					layoutpolicy_horizontal = expanding

					vbox = {
						name = "effects_on_target"
						datacontext = "[GetPlayer.MakeScope.Char]"
						layoutpolicy_horizontal = expanding
						margin_bottom = 5

						background = {
							using = Background_Area_With_Header
						}

						
						text_single = {
							text = "SPELL_EFFECTS"
							align = center
							layoutpolicy_horizontal = expanding
							margin = { 15 4 }
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 5
							spacing = 5
							margin_left = 6
							margin_bottom = 50

							portrait_head = {
								blockoverride "opinion_box"
								{}
							}

							text_multi = {
								name = "effects_info"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								autoresize = yes
								min_width = 350
								margin = { 5 10 }
								text = "[GetScriptedGui( 'spell_tooltip_sgui' ).ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tooltip_target', GetPlayer.MakeScope).End)]"
							}

							portrait_head = {
								datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char]"
								visible = "[Not(ObjectsEqual(GetPlayer.MakeScope.Char, GetPlayer.MakeScope.Var( 'spell_recipient' ).Char))]"
								blockoverride "opinion_box"
								{}
							}

							expand = {}
						}
					}
				}
			}

			hbox = {
				spacing = 75
				# Set Spirit/Decay
				vbox = {
					spacing = 5
					text_single = {
						text = "ELEMENTAL_TYPE_TEXT"
					}
					visible = "[GetScriptedGui('is_spell_elemental_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					hbox = {
						dropdown_menu_standard = {
							blockoverride "dropdown_properties"
							{
								onselectionchanged = "[GetScriptedGui('set_spirit_decay_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag(Scope.GetFlagName)).End)]"
								datamodel = "[GetPlayer.MakeScope.GetList( 'spell_elemental_types' )]"
							}
							blockoverride "dropdown_active_item_properties"
							{
								text = "[Localize(Concatenate('magic_gui_', Scope.GetFlagName))]"
							}
							blockoverride "dropdown_item_properties"
							{
								onmousehierarchyenter = "[GetScriptedGui('set_spirit_decay_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag(Scope.GetFlagName)).End)]"
								text = "[Localize(Concatenate('magic_gui_', Scope.GetFlagName))]"
							}
						}
					}
					
				}
				button_primary = {
					size = { 225 50 }
					text = "CAST_SPELL_TEXT"
					tooltip = "[GetScriptedGui('can_cast_spell_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					enabled = "[GetScriptedGui('can_cast_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					onclick = "[GetScriptedGui( 'cast_spell_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
					onclick = "[GetVariableSystem.Clear( 'current_elemental_type' )]"
					onclick = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
					onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					onclick = "[GetVariableSystem.Clear( 'spellbook_window' )]"
				}
				# Set Rank
				vbox = {
					spacing = 5
					text_single = {
						text = "SPELL_RANK_TEXT"
					}
					visible = "[GetScriptedGui('does_spell_have_ranks_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					hbox = {
						dropdown_menu_standard = {
							blockoverride "dropdown_properties"
							{
								onselectionchanged = "[GetScriptedGui('set_spell_rank_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag(Scope.GetFlagName)).End)]"
								datamodel = "[GetPlayer.MakeScope.GetList( 'spell_ranks' )]"
							}
							blockoverride "dropdown_active_item_properties"
							{
								text = "[Localize(Concatenate('magic_gui_', Scope.GetFlagName))]"
							}
							blockoverride "dropdown_item_properties"
							{
								onmousehierarchyenter = "[GetScriptedGui('set_spell_rank_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag(Scope.GetFlagName)).End)]"
								text = "[Localize(Concatenate('magic_gui_',Scope.GetFlagName))]"
							}
						}
					}
				}
			}
		
			expand = {}
		}
	}
}

# Kinda like Grant titles window
window = {
	name = "province_selection_window"
	parentanchor = vcenter|right
	position = { -15 5 }
	size = { 550 960 }
	movable = no
	layer = middle

	using = Window_Background
	using = Window_Decoration_Spike

	visible = "[GetVariableSystem.HasValue('spell_province_window', 'yes')]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins

		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "DEFAULT_TEXT"
			}

			blockoverride "button_close"
			{
				onclick = "[SetMapMode('realms')]"
				onclick = "[GetVariableSystem.Set('spellbook_window','yes')]"
				onclick = "[GetVariableSystem.Clear('spell_province_window')]"
			}

		}
		banner_with_portrait = {
			name = "portrait_and_info"
			layoutpolicy_horizontal = expanding

			blockoverride "banner_with_portrait_text"
			{
				text = "SPELL_PROVINCE_SELECTION_TEXT"
			}

			blockoverride "portrait"
			{
				portrait_head = {
					datacontext = "[GetPlayer.MakeScope.Var('original_recipient').Char]"

					blockoverride "portrait_transformation"
					{
						portrait_scale = { -1 1 }
						portrait_offset = { 1 0 }
					}
				}
			}
		}
		spacer = {
			size = { 0 10 }
		}
		scrollbox = {
			name = "titles_list"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			blockoverride "scrollbox_empty"
			{
				visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList( 'target_titles' ))]"
				text = "GRANT_TITLES_NO_TITLES"
			}

			blockoverride "scrollbox_content"
			{
				vbox_list_spell_titles_selection = {
					layoutpolicy_horizontal = expanding 
				}
			}
		}
		spacer = {
			size = { 0 10 }
		}
		button_primary = {
			text = "DEFAULT_TEXT"
			enabled = "[GetPlayer.MakeScope.Var('spell_recipient').IsSet]"
		}
	}
}

types spellbooktypes {
	type spell_target_character_display_vbox = vbox {
		
	}
	type spell_target_province_display_vbox = vbox {
		

	}
	type vbox_list_spell_titles_selection = vbox {
		name = "titles_grid"
		layoutpolicy_horizontal = expanding
		spacing = 3
		datamodel = "[GetPlayer.MakeScope.GetList( 'target_titles' )]"

		item = {
			widget = {
				name = "title_list_item"
				layoutpolicy_horizontal = expanding
				size = { 0 45 }

				button_standard = {
					size = { 425 45 }
					name = "title_button"
					datacontext = "[Scope.Title]"

					coa_title_tiny_crown = {
						position = { 0 -8 }
					}
					tooltipwidget = {
						using = LandedTitleTooltip
					}
					down = "[GetScriptedGui( 'is_selected_target_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
					onclick = "[GetScriptedGui('set_target_or_add_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
					enabled = "[GetScriptedGui( 'is_spell_target_valid_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
				}

				hbox = {
					margin_left = 45
					margin_right = 5

					text_single = {
						name = "text"
						default_format = "#V"
						layoutpolicy_horizontal = expanding
						text = "[Scope.Title.GetNameNoTooltip]"
					}
				}
			}
		}
		
		
	}
}
